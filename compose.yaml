version: '3.8'

services:
  api1:
    image: mkaule/rinha-app:v1.0
    hostname: api1
    depends_on:
      - db
    expose:
      - "80"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/rinhaDB
      SPRING_REDIS_HOST: redis
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: 400M

  api2:
    image: mkaule/rinha-app:v1.0
    hostname: api2
    depends_on:
      - db
    expose:
      - "80"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/rinhaDB
      SPRING_REDIS_HOST: redis
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: 400M

  nginx:
    image: nginx:latest
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - rinha-network
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: 500M

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - rinha-network
    command: redis-server --save "" --appendonly no --maxclients 20000
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: 300M

  db:
    image: postgres:latest
    command: 'postgres -c max_connections=200 -c shared_buffers=512MB -c wal_buffers=64MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    hostname: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: rinhaDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: 1400M

volumes:
  pgdata:

networks:
  rinha-network:
